{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\Documentos\\\\FiapTrabalhos\\\\GitHub\\\\green-front-react\\\\pages\\\\cadastro\\\\index.js\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport { useHistory } from \"react-router-dom\";\nimport { Formik } from 'formik';\nimport { Form } from './Form';\nimport api from '../../src/components/api'; //#TODO USAR O FORMIK, YUP E AXIOS - JA INSTALADOS\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  }\n}));\nexport default function Cadastro() {\n  _s();\n\n  let history = useHistory();\n  const classes = useStyles();\n  const initvalues = {\n    nome: '',\n    sobrenome: '',\n    username: '',\n    endereco: '',\n    hashId: '',\n    password: '',\n    confpassword: '',\n    sexo: ''\n  };\n\n  const submitValues = (values, actions) => {\n    var pessoa = {\n      \"nome\": values.nome,\n      \"sobrenome\": values.sobrenome,\n      \"endereco\": values.endereco,\n      \"hashId\": values.hashId,\n      \"sexo\": values.sexo\n    };\n    var login = {\n      \"username\": values.username,\n      \"password\": values.password\n    };\n    api.post('pessoa/createPessoa', {\n      pessoa,\n      login\n    }).then(res => console.log('Cadastro realizado com sucesso' + res.data)).catch(err => {\n      console.error(\"ops! ocorreu um erro\" + err);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.paper,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        children: \"Cadastre-se\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: initvalues,\n        onSubmit: submitValues,\n        children: props => /*#__PURE__*/_jsxDEV(Form, _objectSpread({}, props), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 1\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Cadastro, \"BdTvy0NwxfXtm2+rVFU+2ByCBYw=\", false, function () {\n  return [useHistory, useStyles];\n});\n\n_c = Cadastro;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cadastro\");","map":{"version":3,"sources":["D:/Documentos/FiapTrabalhos/GitHub/green-front-react/pages/cadastro/index.js"],"names":["React","Typography","makeStyles","Container","useHistory","Formik","Form","api","useStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","Cadastro","history","classes","initvalues","nome","sobrenome","username","endereco","hashId","password","confpassword","sexo","submitValues","values","actions","pessoa","login","post","then","res","console","log","data","catch","err","error","props"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,SAAQC,IAAR,QAAmB,QAAnB;AACA,OAAOC,GAAP,MAAgB,0BAAhB,C,CAGA;;AAEA,MAAMC,SAAS,GAAGN,UAAU,CAAEO,KAAD,KAAY;AACrCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,SAAS,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADN;AAELC,IAAAA,OAAO,EAAE,MAFJ;AAGLC,IAAAA,aAAa,EAAE,QAHV;AAILC,IAAAA,UAAU,EAAE;AAJP;AAD8B,CAAZ,CAAD,CAA5B;AAUA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AAC/B,MAAIC,OAAO,GAAGb,UAAU,EAAxB;AACA,QAAMc,OAAO,GAAGV,SAAS,EAAzB;AACA,QAAMW,UAAU,GAAG;AACjBC,IAAAA,IAAI,EAAC,EADY;AAEjBC,IAAAA,SAAS,EAAC,EAFO;AAGjBC,IAAAA,QAAQ,EAAC,EAHQ;AAIjBC,IAAAA,QAAQ,EAAC,EAJQ;AAKjBC,IAAAA,MAAM,EAAC,EALU;AAMjBC,IAAAA,QAAQ,EAAC,EANQ;AAOjBC,IAAAA,YAAY,EAAC,EAPI;AAQjBC,IAAAA,IAAI,EAAC;AARY,GAAnB;;AAUA,QAAMC,YAAY,GAAG,CAACC,MAAD,EAASC,OAAT,KAAqB;AAExC,QAAIC,MAAM,GAAG;AAAC,cAAOF,MAAM,CAACT,IAAf;AACV,mBAAYS,MAAM,CAACR,SADT;AAEV,kBAAWQ,MAAM,CAACN,QAFR;AAGV,gBAASM,MAAM,CAACL,MAHN;AAIV,cAAOK,MAAM,CAACF;AAJJ,KAAb;AAMA,QAAIK,KAAK,GAAG;AAAC,kBAAWH,MAAM,CAACP,QAAnB;AACR,kBAAWO,MAAM,CAACJ;AADV,KAAZ;AAGIlB,IAAAA,GAAG,CAAC0B,IAAJ,CAAS,qBAAT,EAA+B;AAACF,MAAAA,MAAD;AAASC,MAAAA;AAAT,KAA/B,EACCE,IADD,CACOC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAY,mCAAmCF,GAAG,CAACG,IAAnD,CADf,EAECC,KAFD,CAEQC,GAAD,IAAS;AACdJ,MAAAA,OAAO,CAACK,KAAR,CAAc,yBAAyBD,GAAvC;AACF,KAJA;AAKL,GAhBD;;AAkBA,sBAEI,QAAC,SAAD;AAAW,IAAA,SAAS,EAAC,MAArB;AAA4B,IAAA,QAAQ,EAAC,IAArC;AAAA,2BAER;AAAK,MAAA,SAAS,EAAEtB,OAAO,CAACR,KAAxB;AAAA,8BAEQ,QAAC,UAAD;AAAY,QAAA,SAAS,EAAC,IAAtB;AAA2B,QAAA,OAAO,EAAC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFR,eAKQ,QAAC,MAAD;AACA,QAAA,aAAa,EAAES,UADf;AAEA,QAAA,QAAQ,EAAES,YAFV;AAAA,kBAGCc,KAAK,iBAAI,QAAC,IAAD,oBAAUA,KAAV;AAAA;AAAA;AAAA;AAAA;AAHV;AAAA;AAAA;AAAA;AAAA,cALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAFQ;AAAA;AAAA;AAAA;AAAA,UAFJ;AAqBH;;GApDuB1B,Q;UACNZ,U,EACEI,S;;;KAFIQ,Q","sourcesContent":["import React from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Formik } from 'formik';\r\nimport {Form} from './Form';\r\nimport api from '../../src/components/api';\r\n\r\n\r\n//#TODO USAR O FORMIK, YUP E AXIOS - JA INSTALADOS\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      marginTop: theme.spacing(8),\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      alignItems: \"center\",\r\n    },\r\n\r\n  }));\r\n\r\nexport default function Cadastro (){\r\n    let history = useHistory();\r\n    const classes = useStyles();\r\n    const initvalues = {\r\n      nome:'',\r\n      sobrenome:'',\r\n      username:'',\r\n      endereco:'',\r\n      hashId:'',\r\n      password:'',\r\n      confpassword:'',\r\n      sexo:'',\r\n    }\r\n    const submitValues = (values, actions) => {\r\n\r\n      var pessoa = {\"nome\":values.nome,\r\n         \"sobrenome\":values.sobrenome,\r\n         \"endereco\":values.endereco,\r\n         \"hashId\":values.hashId,\r\n         \"sexo\":values.sexo\r\n        }\r\n      var login = {\"username\":values.username,\r\n          \"password\":values.password}\r\n\r\n          api.post('pessoa/createPessoa',{pessoa, login})\r\n          .then((res) => console.log('Cadastro realizado com sucesso' + res.data))\r\n          .catch((err) => {\r\n            console.error(\"ops! ocorreu um erro\" + err);\r\n         });\r\n    }\r\n\r\n    return(\r\n\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n\r\n<div className={classes.paper}>\r\n\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Cadastre-se\r\n        </Typography>\r\n        <Formik         \r\n        initialValues={initvalues}\r\n        onSubmit={submitValues}>\r\n        {props => <Form {...props}/>}\r\n\r\n        </Formik>\r\n\r\n      </div>\r\n        </Container>\r\n\r\n    );\r\n\r\n}"]},"metadata":{},"sourceType":"module"}